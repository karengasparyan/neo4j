openapi: 3.0.0
info:
  title: Neo4j API
  description: Neo4j API description
  version: 1.0.0
servers:
  - url: http://localhost:4000/api
    description: Local server
  - url: https://staging-api.example.com
    description: Staging server
paths:
  /node:
    get:
      summary: Get Node by id
      tags:
        - Nodes
      parameters:
        - name: id
          in: path
          description: Get Node by id
          required: true
      responses:
        '200':
          description: Get Node by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/nodeData'
    post:
      summary: Create Node
      tags:
        - Nodes
      requestBody:
        content:
          application/json:
            schema:
              title: Node Created
              type: object
              properties:
                name:
                  type: string
                properties:
                  type: object
              required:
                - name
                - properties
      responses:
        '200':
          description: Node created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/nodeData'
    put:
      summary: Update Node
      tags:
        - Nodes
      parameters:
        - name: id
          in: path
          description: id of the Node to update
          required: true
      requestBody:
        content:
          application/json:
            schema:
              title: Node Created
              type: object
              properties:
                name:
                  type: string
                properties:
                  type: object
              required:
                - name
                - properties
      responses:
        '200':
          description: Node updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/nodeData'
    delete:
      summary: Delete Node
      tags:
        - Nodes
      parameters:
        - name: id
          in: path
          description: id of the Node to delete
          required: true
      responses:
        '200':
          description: Node deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/nodeData'
  /node/all:
    get:
      summary: Get all Nodes
      tags:
        - Nodes
      parameters:
        - name: id
          in: path
          description: Get Nodes
          required: true
      responses:
        '200':
          description: Nodes list
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/nodeData'

components:
  schemas:
    nodeData:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        properties:
          type: object
          properties:
